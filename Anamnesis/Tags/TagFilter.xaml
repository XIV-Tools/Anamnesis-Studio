<UserControl
	x:Class="Anamnesis.Tags.TagFilter"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:XivToolsWpf="clr-namespace:XivToolsWpf.Controls;assembly=XivToolsWpf"
	xmlns:controls="clr-namespace:Anamnesis.Controls"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:local="clr-namespace:Anamnesis.Tags"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	d:DesignHeight="450"
	d:DesignWidth="800"
	Loaded="OnLoaded"
	mc:Ignorable="d">

	<UserControl.Resources>
		<Style
			x:Key="TagControl"
			TargetType="{x:Type ItemsControl}">
			<Style.Setters>
				<Setter Property="ItemsPanel">
					<Setter.Value>
						<ItemsPanelTemplate>
							<WrapPanel />
						</ItemsPanelTemplate>
					</Setter.Value>
				</Setter>
			</Style.Setters>
		</Style>

		<local:CanTagAddConverter x:Key="CanTagAdd" />


		<DataTemplate DataType="{x:Type local:Tag}">
			<Button
				Height="20"
				Margin="1"
				Click="OnTagClicked"
				Cursor="Hand"
				IsEnabled="{Binding Name, Converter={StaticResource StringHasContentToBool}}">
				<Button.Style>
					<Style TargetType="{x:Type Button}">
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type Button}">
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition />
										</Grid.ColumnDefinitions>

										<Border
											Grid.ColumnSpan="2"
											Background="{StaticResource BackgroundLightBrush}"
											CornerRadius="10"
											Opacity="0.5" />

										<XivToolsWpf:IconBlock
											x:Name="TagIcon"
											Margin="4,1,0,0"
											FontSize="11"
											Foreground="{DynamicResource ForegroundLightBrush}"
											Icon="{Binding Icon}"
											Opacity="0.5" />

										<Grid
											x:Name="CloseIcon"
											Margin="4,0,0,0"
											Opacity="0">

											<XivToolsWpf:IconBlock
												FontSize="13"
												Foreground="{DynamicResource ForegroundLightBrush}"
												Icon="PlusCircle"
												Visibility="{Binding Path=., RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Converter={StaticResource CanTagAdd}, ConverterParameter=Add}" />

											<XivToolsWpf:IconBlock
												FontSize="13"
												Foreground="{DynamicResource ForegroundLightBrush}"
												Icon="MinusCircle"
												Visibility="{Binding Path=., RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Converter={StaticResource CanTagAdd}, ConverterParameter=Remove}" />
										</Grid>

										<TextBlock
											Grid.Column="1"
											Margin="3,0,6,0"
											VerticalAlignment="Center"
											FontSize="11"
											Foreground="{DynamicResource ForegroundLightBrush}"
											Text="{Binding Name}"
											TextTrimming="CharacterEllipsis" />
									</Grid>
									<ControlTemplate.Triggers>
										<Trigger Property="IsMouseOver" Value="True">

											<Trigger.EnterActions>
												<BeginStoryboard>
													<Storyboard>
														<DoubleAnimation
															EasingFunction="{StaticResource SinEaseIn}"
															Storyboard.TargetName="TagIcon"
															Storyboard.TargetProperty="Opacity"
															To="0"
															Duration="0:0:0.150" />

														<DoubleAnimation
															EasingFunction="{StaticResource SinEaseIn}"
															Storyboard.TargetName="CloseIcon"
															Storyboard.TargetProperty="Opacity"
															To="1"
															Duration="0:0:0.150" />
													</Storyboard>
												</BeginStoryboard>
											</Trigger.EnterActions>

											<Trigger.ExitActions>
												<BeginStoryboard>
													<Storyboard>
														<DoubleAnimation
															EasingFunction="{StaticResource SinEaseOut}"
															Storyboard.TargetName="TagIcon"
															Storyboard.TargetProperty="Opacity"
															To="0.5"
															Duration="0:0:0.200" />

														<DoubleAnimation
															EasingFunction="{StaticResource SinEaseOut}"
															Storyboard.TargetName="CloseIcon"
															Storyboard.TargetProperty="Opacity"
															To="0"
															Duration="0:0:0.200" />
													</Storyboard>
												</BeginStoryboard>
											</Trigger.ExitActions>

										</Trigger>
									</ControlTemplate.Triggers>

								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</Button.Style>
			</Button>
		</DataTemplate>
	</UserControl.Resources>

	<Grid x:Name="ContentArea">
		<Grid.RowDefinitions>
			<RowDefinition />
			<RowDefinition />
		</Grid.RowDefinitions>

		<Grid
			x:Name="TagList"
			Margin="1">

			<Border Style="{StaticResource XivToolsControlBorder}" />

			<ItemsControl
				x:Name="FilterTagsControl"
				MinHeight="24"
				Margin="2,3,2,1"
				ItemsSource="{Binding FilterByTags}"
				Style="{StaticResource TagControl}">

				<ItemsControl.Resources>
					<DataTemplate DataType="{x:Type local:AddTag}">

						<ToggleButton
							x:Name="AddTagInput"
							Height="20"
							MinWidth="75"
							Margin="1"
							Cursor="Hand">
							<ToggleButton.Style>
								<Style TargetType="{x:Type ToggleButton}">
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type ToggleButton}">
												<Grid Background="Transparent">
													<Grid HorizontalAlignment="Left">
														<Grid.ColumnDefinitions>
															<ColumnDefinition Width="Auto" />
															<ColumnDefinition />
														</Grid.ColumnDefinitions>

														<Border
															Grid.Column="0"
															Background="{StaticResource BackgroundLightBrush}"
															CornerRadius="10"
															Opacity="0.5" />

														<TextBlock
															x:Name="HintText"
															Grid.Column="1"
															Margin="6,0"
															VerticalAlignment="Center"
															Foreground="{DynamicResource ForegroundLightBrush}"
															Opacity="0.5"
															Text="Search or filter by tags..."
															Visibility="{Binding ShowHint, Converter={StaticResource B2V}}" />

														<XivToolsWpf:IconBlock
															x:Name="AddIcon"
															Grid.Column="0"
															Margin="4,0"
															HorizontalAlignment="Left"
															FontSize="13"
															Foreground="{DynamicResource ForegroundLightBrush}"
															Icon="PlusCircle"
															Opacity="0.5" />

														<TextBox
															x:Name="InputBox"
															Grid.Column="0"
															Margin="3,1,6,-2"
															Padding="0,0,0,0"
															AcceptsReturn="False"
															Background="Transparent"
															GotKeyboardFocus="OnTagSearchGotKeyboardFocus"
															LostKeyboardFocus="OnTagSearchLostKeyboardFocus"
															PreviewKeyDown="OnTagSearchPreviewKeyDown"
															Text="{Binding TagSearchText, RelativeSource={RelativeSource AncestorType={x:Type local:TagFilter}}, UpdateSourceTrigger=PropertyChanged}" />

													</Grid>
												</Grid>
												<ControlTemplate.Triggers>
													<DataTrigger Value="True">

														<DataTrigger.Binding>
															<MultiBinding Converter="{StaticResource MultiBoolOr}">
																<Binding
																	Path="IsMouseOver"
																	RelativeSource="{RelativeSource Self}" />
																<Binding
																	ElementName="InputBox"
																	Path="IsKeyboardFocused" />
																<Binding
																	Path="IsPopupOpen"
																	RelativeSource="{RelativeSource AncestorType={x:Type local:TagFilter}}" />
															</MultiBinding>
														</DataTrigger.Binding>

														<DataTrigger.EnterActions>
															<BeginStoryboard>
																<Storyboard>
																	<DoubleAnimation
																		EasingFunction="{StaticResource SinEaseIn}"
																		Storyboard.TargetName="AddIcon"
																		Storyboard.TargetProperty="Opacity"
																		To="1"
																		Duration="0:0:0.150" />
																	<DoubleAnimation
																		EasingFunction="{StaticResource SinEaseIn}"
																		Storyboard.TargetName="InputBox"
																		Storyboard.TargetProperty="MinWidth"
																		To="75"
																		Duration="0:0:0.150" />
																	<ThicknessAnimation
																		EasingFunction="{StaticResource SinEaseIn}"
																		Storyboard.TargetName="InputBox"
																		Storyboard.TargetProperty="Padding"
																		To="8,0,0,0"
																		Duration="0:0:0.150" />

																</Storyboard>
															</BeginStoryboard>
														</DataTrigger.EnterActions>

														<DataTrigger.ExitActions>
															<BeginStoryboard>
																<Storyboard>
																	<DoubleAnimation
																		EasingFunction="{StaticResource SinEaseOut}"
																		Storyboard.TargetName="AddIcon"
																		Storyboard.TargetProperty="Opacity"
																		To="0.5"
																		Duration="0:0:0.200" />
																	<DoubleAnimation
																		EasingFunction="{StaticResource SinEaseIn}"
																		Storyboard.TargetName="InputBox"
																		Storyboard.TargetProperty="MinWidth"
																		To="0"
																		Duration="0:0:0.150" />
																	<ThicknessAnimation
																		EasingFunction="{StaticResource SinEaseIn}"
																		Storyboard.TargetName="InputBox"
																		Storyboard.TargetProperty="Padding"
																		To="0,0,0,0"
																		Duration="0:0:0.150" />
																</Storyboard>
															</BeginStoryboard>
														</DataTrigger.ExitActions>

													</DataTrigger>

													<Trigger Property="IsChecked" Value="True">
														<Setter TargetName="InputBox" Property="FocusManager.FocusedElement" Value="{Binding ElementName=InputBox}" />
													</Trigger>

													<DataTrigger
														Binding="{Binding IsKeyboardFocused, ElementName=InputBox}"
														Value="False">
														<Setter Property="IsChecked" Value="False" />
													</DataTrigger>

													<DataTrigger
														Binding="{Binding IsKeyboardFocused, ElementName=InputBox}"
														Value="True">
														<Setter Property="IsChecked" Value="True" />

														<DataTrigger.EnterActions>
															<BeginStoryboard>
																<Storyboard>
																	<DoubleAnimation
																		EasingFunction="{StaticResource SinEaseInOut}"
																		Storyboard.TargetName="HintText"
																		Storyboard.TargetProperty="Opacity"
																		To="0"
																		Duration="0:0:0.400" />

																</Storyboard>
															</BeginStoryboard>
														</DataTrigger.EnterActions>

														<DataTrigger.ExitActions>
															<BeginStoryboard>
																<Storyboard>
																	<DoubleAnimation
																		EasingFunction="{StaticResource SinEaseInOut}"
																		Storyboard.TargetName="HintText"
																		Storyboard.TargetProperty="Opacity"
																		To="0.5"
																		Duration="0:0:0.400" />
																</Storyboard>
															</BeginStoryboard>
														</DataTrigger.ExitActions>
													</DataTrigger>

													<DataTrigger
														Binding="{Binding IsSelected}"
														Value="True">
														<Setter Property="Opacity" Value="0" />
														<Setter Property="IsChecked" Value="True" />
														<Setter TargetName="InputBox" Property="FocusManager.FocusedElement" Value="{Binding ElementName=InputBox}" />
													</DataTrigger>

												</ControlTemplate.Triggers>

											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</ToggleButton.Style>
						</ToggleButton>

					</DataTemplate>
				</ItemsControl.Resources>

			</ItemsControl>
		</Grid>

		<Popup
			x:Name="AddTagPopup"
			Width="{Binding ActualWidth, ElementName=TagList}"
			MaxHeight="256"
			AllowsTransparency="True"
			Closed="OnPopupClosed"
			IsOpen="{Binding IsPopupOpen}"
			Opened="OnPopupOpened"
			PlacementTarget="{Binding ElementName=TagList}"
			StaysOpen="True">

			<Grid>

				<controls:PopupBackground />

				<ScrollViewer Margin="12">

					<Grid>

						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition />
						</Grid.RowDefinitions>

						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition />
						</Grid.ColumnDefinitions>

						<XivToolsWpf:KeyPrompt
							Key="Return"
							Grid.Row="0"
							Grid.Column="0"
							IsEnabled="{Binding SearchTag.Name, Converter={StaticResource StringHasContentToBool}}" />

						<ContentPresenter
							Grid.Row="0"
							Grid.Column="1"
							Content="{Binding SearchTag}"
							IsEnabled="{Binding SearchTag.Name, Converter={StaticResource StringHasContentToBool}}" />

						<XivToolsWpf:KeyPrompt
							Key="Tab"
							Grid.Row="1"
							Grid.Column="0"
							Visibility="{Binding SuggestTag, Converter={StaticResource NotNullToVisibilityConverter}}" />

						<ContentPresenter
							Grid.Row="1"
							Grid.Column="1"
							Content="{Binding SuggestTag}"
							Visibility="{Binding SuggestTag, Converter={StaticResource NotNullToVisibilityConverter}}" />

						<ItemsControl
							Grid.Row="2"
							Grid.ColumnSpan="2"
							Margin="0,8,0,0"
							ItemsSource="{Binding AvailableTags}"
							Style="{StaticResource TagControl}" />

					</Grid>
				</ScrollViewer>
			</Grid>
		</Popup>
	</Grid>
</UserControl>
