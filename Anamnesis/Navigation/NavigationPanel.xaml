<panels:PanelBase
	x:Class="Anamnesis.Navigation.NavigationPanel"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:XivToolsWpf="clr-namespace:XivToolsWpf.Controls;assembly=XivToolsWpf"
	xmlns:ana="clr-namespace:Anamnesis"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:local="clr-namespace:Anamnesis.Navigation"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:panels="clr-namespace:Anamnesis.Panels"
	CanResize="False"
	ShowBackground="False"
	mc:Ignorable="d">

	<Grid
		x:Name="ContentArea"
		Margin="0,0,6,6">

		<Grid
			Margin="12,12,0,0"
			HorizontalAlignment="Left">

			<Grid.RenderTransform>
				<TranslateTransform />
			</Grid.RenderTransform>

			<Grid.Style>
				<Style TargetType="{x:Type Grid}">

					<Setter Property="Opacity" Value="0" />

					<Style.Triggers>
						<DataTrigger
							Binding="{Binding IsExpanded}"
							Value="True">

							<DataTrigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation
											EasingFunction="{StaticResource SinEaseOut}"
											Storyboard.TargetProperty="Opacity"
											To="1"
											Duration="0:0:0.150" />
										<DoubleAnimation
											EasingFunction="{StaticResource SinEaseOut}"
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
											From="-10"
											To="0"
											Duration="0:0:0.150" />
									</Storyboard>
								</BeginStoryboard>
							</DataTrigger.EnterActions>

							<DataTrigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation
											EasingFunction="{StaticResource SinEaseOut}"
											Storyboard.TargetProperty="Opacity"
											To="0"
											Duration="0:0:0.250" />
										<DoubleAnimation
											EasingFunction="{StaticResource SinEaseOut}"
											Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
											To="-10"
											Duration="0:0:0.250" />
									</Storyboard>
								</BeginStoryboard>
							</DataTrigger.ExitActions>

						</DataTrigger>
					</Style.Triggers>
				</Style>
			</Grid.Style>

			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition />
			</Grid.RowDefinitions>

			<Border
				Grid.Row="0"
				Grid.RowSpan="3"
				Background="{DynamicResource MaterialDesignBackground}"
				CornerRadius="6">

				<Border.BitmapEffect>
					<DropShadowBitmapEffect ShadowDepth="0" />
				</Border.BitmapEffect>
			</Border>

			<Border
				Grid.Row="0"
				Grid.RowSpan="3"
				BorderBrush="{DynamicResource PrimaryHueMidBrush}"
				BorderThickness="1"
				CornerRadius="6"
				Visibility="{Binding IsActive, RelativeSource={RelativeSource AncestorType={x:Type Window}}, Converter={StaticResource B2V}}" />

			<Border
				Grid.Row="1"
				Margin="3,3,3,1"
				CornerRadius="6,6,0,0"
				Style="{StaticResource XivToolsControlBorder}" />

			<Border
				Grid.Row="2"
				Margin="3,1,3,3"
				CornerRadius="0,0,6,6"
				Style="{StaticResource XivToolsControlBorder}" />

			<StackPanel
				Grid.Row="0"
				Margin="36,6,6,6"
				Orientation="Horizontal">

				<TextBlock Text="{Binding Services.Scene.CurrentSceneName}" />
				<XivToolsWpf:IconBlock
					Margin="6,3,0,0"
					VerticalAlignment="Center"
					ana:Behaviours.Tooltip="Scene_Unsaved"
					FontSize="6"
					Icon="ExclamationTriangle"
					Visibility="{Binding Services.Scene.UnsavedChanges, Converter={StaticResource B2V}}" />

			</StackPanel>

			<StackPanel
				Grid.Row="1"
				Margin="4,3,4,1"
				Orientation="Horizontal">

				<StackPanel.Resources>
					<Style
						BasedOn="{StaticResource TransparentIconButton}"
						TargetType="{x:Type Button}">
						<Setter Property="Width" Value="32" />
						<Setter Property="Height" Value="32" />
					</Style>

					<Style
						BasedOn="{StaticResource TransparentIconToggleButton}"
						TargetType="{x:Type ToggleButton}">
						<Setter Property="Width" Value="32" />
						<Setter Property="Height" Value="32" />
						<Setter Property="Background" Value="Transparent" />
					</Style>

					<Style TargetType="{x:Type XivToolsWpf:IconBlock}">
						<Setter Property="FontSize" Value="14" />
					</Style>
				</StackPanel.Resources>

				<Button
					Background="Transparent"
					Click="OnSaveSceneClicked"
					ToolTip="[Scene_Save]">
					<XivToolsWpf:IconBlock Icon="Save" />
				</Button>

				<Button
					Background="Transparent"
					Click="OnOpenSceneClicked"
					ToolTip="[Scene_Open]">
					<XivToolsWpf:IconBlock Icon="FolderOpen" />
				</Button>

				<Button
					Background="Transparent"
					Click="OnImportClicked"
					ToolTip="[Scene_Import]">
					<XivToolsWpf:IconBlock Icon="FileImport" />
				</Button>

				<Button
					Background="Transparent"
					Click="OnExportClicked"
					ToolTip="[Scene_Export]">
					<XivToolsWpf:IconBlock Icon="FileExport" />
				</Button>

				<!--<ToggleButton
					x:Name="ExportButton"
					Height="28"
					ana:Behaviours.Tooltip="Scene_Export"
					Style="{StaticResource TransparentIconDropdownButton}">
					<XivToolsWpf:IconBlock
						FontSize="14"
						Icon="FileExport" />
				</ToggleButton>

				<Popup
					MinWidth="128"
					AllowsTransparency="True"
					IsOpen="{Binding IsChecked, ElementName=ExportButton}"
					PlacementTarget="{Binding ElementName=ExportButton}"
					StaysOpen="False">
					<Grid Margin="4">
						<controls:PopupBackground Grid.RowSpan="2" />

						<StackPanel
							Margin="9"
							Orientation="Vertical">
							<Button
								Height="22"
								HorizontalContentAlignment="Left"
								Click="OnExportCharacterClicked"
								Style="{StaticResource TransparentIconButton}">
								<TextBlock Text="[File_Character" />
							</Button>

							<Button
								Height="22"
								HorizontalContentAlignment="Left"
								Click="OnExportPoseClicked"
								Style="{StaticResource TransparentIconButton}">
								<TextBlock Text="[File_Pose" />
							</Button>

							<Button
								Height="22"
								HorizontalContentAlignment="Left"
								Click="OnExportCameraClicked"
								Style="{StaticResource TransparentIconButton}">
								<TextBlock Text="[File_CameraShot" />
							</Button>
						</StackPanel>
					</Grid>
				</Popup>-->

				<!--  Verbose Logging  -->
				<ToggleButton
					IsChecked="{Binding Services.Logs.VerboseLogging}"
					ToolTip="Enable verbose logging"
					Visibility="{Binding Services.IsDebug, Converter={StaticResource B2V}}">
					<XivToolsWpf:IconBlock
						FontSize="12"
						Icon="FileAlt" />
				</ToggleButton>

			</StackPanel>

			<StackPanel
				Grid.Row="2"
				Margin="1,2,1,4">

				<StackPanel.Resources>
					<Style
						BasedOn="{StaticResource TransparentIconButton}"
						TargetType="{x:Type Button}">
						<Setter Property="Height" Value="32" />
						<Setter Property="HorizontalContentAlignment" Value="Left" />
						<Setter Property="Margin" Value="3,0" />
					</Style>

					<Style TargetType="{x:Type XivToolsWpf:IconBlock}">
						<Setter Property="FontSize" Value="14" />
					</Style>
				</StackPanel.Resources>

				<Button
					ana:Behaviours.Navigation="Settings"
					Background="Transparent"
					ToolTip="[Naviagation_Settings_Tip]">
					<XivToolsWpf:Header
						Icon="Cogs"
						Text="[Naviagation_Settings]" />
				</Button>

				<Button
					ana:Behaviours.Navigation="Library"
					Background="Transparent"
					ToolTip="[Naviagation_Library_Tip]">
					<XivToolsWpf:Header
						Icon="Book"
						Text="[Naviagation_Library]" />
				</Button>

				<Button
					ana:Behaviours.Navigation="Weather"
					Background="Transparent"
					ToolTip="[Naviagation_Weather_Tip]">
					<XivToolsWpf:Header
						Icon="CloudMoonRain"
						Text="[Naviagation_Weather]" />
				</Button>

				<Button
					ana:Behaviours.Navigation="Camera"
					Background="Transparent"
					ToolTip="[Naviagation_Camera_Tip]">
					<XivToolsWpf:Header
						Icon="Camera"
						Text="[Naviagation_Camera]" />
				</Button>

				<Button
					ana:Behaviours.Navigation="Character"
					Background="Transparent"
					ToolTip="[Naviagation_Actor_Character_Tip]">
					<XivToolsWpf:Header
						Icon="User"
						Text="[Naviagation_Actor_Character]" />
				</Button>

				<!--<local:Shortcut
					Destination="Action"
					Icon="Biking"
					Label="[Naviagation_Actor_Action"
					ShowText="{Binding ShowText}"
					ToolTip="[Naviagation_Actor_Action_Tip" />-->

				<StackPanel Visibility="{Binding Services.Pose.IsEnabled, Converter={StaticResource B2V}}">

					<Button
						ana:Behaviours.Navigation="Bones"
						ToolTip="[Naviagation_Actor_Bones_Tip]">
						<XivToolsWpf:Header
							Icon="Bone"
							Text="[Naviagation_Actor_Bones]" />
					</Button>

					<Button
						ana:Behaviours.Navigation="Transform"
						ToolTip="[Naviagation_Actor_Transform_Tip]">
						<XivToolsWpf:Header
							Icon="Circle"
							Text="[Naviagation_Actor_Transform]" />
					</Button>
				</StackPanel>

			</StackPanel>

			<Rectangle
				Grid.Row="0"
				Fill="Transparent"
				MouseDown="OnIconMouseDown" />
		</Grid>


		<Grid
			x:Name="PoseBar"
			Grid.Row="0"
			Margin="20,0,0,0"
			HorizontalAlignment="Center"
			VerticalAlignment="Top"
			Opacity="0">

			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition />
			</Grid.ColumnDefinitions>

			<Grid.ToolTip>
				<StackPanel Orientation="Vertical">
					<TextBlock
						Margin="0"
						Padding="0"
						Text="[Pose_Toggle" />
					<TextBlock
						Margin="0"
						Padding="0"
						Text="[Pose_WarningNotGPose"
						Visibility="{Binding Services.Gpose.IsGpose, Converter={StaticResource !B2V}}" />
				</StackPanel>
			</Grid.ToolTip>

			<Border
				Grid.ColumnSpan="2"
				Background="{DynamicResource MaterialDesignBackground}"
				CornerRadius="6"
				IsHitTestVisible="False">
				<Border.BitmapEffect>
					<DropShadowBitmapEffect ShadowDepth="0" />
				</Border.BitmapEffect>
			</Border>

			<ToggleButton
				Grid.Column="0"
				Margin="3"
				IsChecked="{Binding Services.Pose.IsEnabled}"
				IsEnabled="{Binding Services.Gpose.IsGpose}"
				Style="{DynamicResource OutlineToggleButton}">

				<Grid
					Margin="6"
					VerticalAlignment="Center">
					<Grid.ColumnDefinitions>
						<ColumnDefinition />
						<ColumnDefinition />
					</Grid.ColumnDefinitions>

					<XivToolsWpf:IconBlock
						Margin="6,0"
						FontSize="18"
						Icon="Running" />

					<TextBlock
						Grid.Column="1"
						Margin="6,2,6,0"
						Text="Pose" />
				</Grid>


			</ToggleButton>

			<StackPanel
				Grid.Column="1"
				VerticalAlignment="Center"
				Orientation="Horizontal">

				<StackPanel.Style>
					<Style TargetType="{x:Type StackPanel}">

						<Setter Property="LayoutTransform">
							<Setter.Value>
								<ScaleTransform ScaleX="0" />
							</Setter.Value>
						</Setter>

						<Style.Triggers>
							<DataTrigger
								Binding="{Binding Services.Pose.IsEnabled}"
								Value="True">
								<DataTrigger.EnterActions>
									<StopStoryboard BeginStoryboardName="CloseStoryboard" />
									<BeginStoryboard x:Name="OpenStoryboard">
										<Storyboard>
											<DoubleAnimation
												EasingFunction="{StaticResource SinEaseOut}"
												Storyboard.TargetProperty="Opacity"
												To="1"
												Duration="0:0:0.200" />
											<DoubleAnimation
												EasingFunction="{StaticResource SinEaseOut}"
												Storyboard.TargetProperty="LayoutTransform.(ScaleTransform.ScaleX)"
												To="1"
												Duration="0:0:0.200" />
										</Storyboard>
									</BeginStoryboard>
								</DataTrigger.EnterActions>
								<DataTrigger.ExitActions>
									<StopStoryboard BeginStoryboardName="OpenStoryboard" />
									<BeginStoryboard x:Name="CloseStoryboard">
										<Storyboard>
											<DoubleAnimation
												EasingFunction="{StaticResource SinEaseIn}"
												Storyboard.TargetProperty="Opacity"
												To="0"
												Duration="0:0:0.200" />
											<DoubleAnimation
												EasingFunction="{StaticResource SinEaseIn}"
												Storyboard.TargetProperty="LayoutTransform.(ScaleTransform.ScaleX)"
												To="0"
												Duration="0:0:0.200" />
										</Storyboard>
									</BeginStoryboard>
								</DataTrigger.ExitActions>
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</StackPanel.Style>

				<CheckBox
					Margin="3,0,6,0"
					VerticalContentAlignment="Center"
					IsChecked="{Binding Services.Pose.FreezePhysics}"
					IsEnabled="{Binding Services.Pose.IsEnabled}">
					<TextBlock Text="[Pose_FreezePhysics" />
				</CheckBox>

				<CheckBox
					Margin="3,0,6,0"
					VerticalContentAlignment="Center"
					IsChecked="{Binding Services.Pose.EnableParenting}"
					IsEnabled="{Binding Services.Pose.IsEnabled}">
					<TextBlock Text="[Pose_Parenting" />
				</CheckBox>

				<Border
					Margin="2,2,5,2"
					Padding="3"
					HorizontalAlignment="Right"
					Background="{DynamicResource AttentionToActionBrush}"
					CornerRadius="6">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition />
							<ColumnDefinition />
							<ColumnDefinition />
						</Grid.ColumnDefinitions>

						<Grid.RowDefinitions>
							<RowDefinition />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>

						<TextBlock
							Grid.ColumnSpan="3"
							Margin="2,0,0,0"
							FontSize="10"
							Text="Edit Mode:" />

						<CheckBox
							Grid.Row="1"
							Grid.Column="0"
							Margin="3,0"
							VerticalContentAlignment="Center"
							IsChecked="{Binding Services.Pose.FreezeRotation}"
							IsEnabled="{Binding Services.Pose.IsEnabled}">
							<TextBlock
								Margin="0,-2,0,2"
								Text="[Pose_EnableRotation" />

							<CheckBox.ToolTip>
								<TextBlock Text="[Pose_EnableRotationTooltip" />
							</CheckBox.ToolTip>
						</CheckBox>

						<CheckBox
							Grid.Row="1"
							Grid.Column="1"
							Margin="3,0"
							VerticalContentAlignment="Center"
							IsChecked="{Binding Services.Pose.FreezePositions}"
							IsEnabled="{Binding Services.Pose.IsEnabled}">
							<TextBlock
								Margin="0,-2,0,2"
								Text="[Pose_EnablePosition" />

							<CheckBox.ToolTip>
								<TextBlock Text="[Pose_EnablePositionTooltip" />
							</CheckBox.ToolTip>
						</CheckBox>

						<CheckBox
							Grid.Row="1"
							Grid.Column="2"
							Margin="3,0"
							VerticalContentAlignment="Center"
							IsChecked="{Binding Services.Pose.FreezeScale}"
							IsEnabled="{Binding Services.Pose.IsEnabled}">
							<TextBlock
								Margin="0,-2,0,2"
								Text="[Pose_EnableScale" />

							<CheckBox.ToolTip>
								<TextBlock Text="[Pose_EnableScaleTooltip" />
							</CheckBox.ToolTip>
						</CheckBox>
					</Grid>
				</Border>
			</StackPanel>

		</Grid>

		<ToggleButton
			Width="42"
			Height="42"
			Margin="0,0,0,0"
			Padding="0"
			HorizontalAlignment="Left"
			VerticalAlignment="Top"
			Background="Transparent"
			Checked="OnExpandClicked"
			IsChecked="{Binding IsExpanded}">

			<ToggleButton.Style>
				<Style
					BasedOn="{StaticResource XivToolsToggleButton}"
					TargetType="{x:Type ToggleButton}">
					<Style.Setters>
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type ToggleButton}">
									<Grid
										x:Name="Grid"
										Cursor="Hand"
										RenderTransformOrigin="0.5,0.5">

										<Grid.RenderTransform>
											<ScaleTransform ScaleX="1" ScaleY="1" />
										</Grid.RenderTransform>

										<Ellipse
											x:Name="Background"
											Fill="{StaticResource MaterialDesignBackground}"
											Opacity="0">
											<Ellipse.BitmapEffect>
												<DropShadowBitmapEffect ShadowDepth="0" />
											</Ellipse.BitmapEffect>
										</Ellipse>

										<Image
											Margin="0,0,0,0"
											MouseDown="OnIconMouseDown"
											Source="/Assets/Anamnesis.png" />

										<Ellipse
											x:Name="Highlight"
											Margin="3"
											Fill="#33FFFFFF"
											Opacity="0" />

										<Ellipse
											x:Name="Shine"
											Margin="1"
											Opacity="0.75">
											<Ellipse.Fill>
												<LinearGradientBrush>
													<GradientStop x:Name="Stop0" Offset="-1" Color="Transparent" />
													<GradientStop x:Name="Stop1" Offset="-0.5" Color="White" />
													<GradientStop x:Name="Stop2" Offset="0" Color="Transparent" />
												</LinearGradientBrush>
											</Ellipse.Fill>

										</Ellipse>
									</Grid>

									<ControlTemplate.Triggers>
										<Trigger Property="IsMouseOver" Value="True">
											<Trigger.EnterActions>
												<BeginStoryboard>
													<Storyboard>
														<DoubleAnimation
															EasingFunction="{StaticResource SinEaseIn}"
															Storyboard.TargetName="Highlight"
															Storyboard.TargetProperty="Opacity"
															To="1"
															Duration="0:0:0.100" />
													</Storyboard>
												</BeginStoryboard>
											</Trigger.EnterActions>

											<Trigger.ExitActions>
												<BeginStoryboard>
													<Storyboard>
														<DoubleAnimation
															EasingFunction="{StaticResource SinEaseIn}"
															Storyboard.TargetName="Highlight"
															Storyboard.TargetProperty="Opacity"
															To="0"
															Duration="0:0:0.200" />

													</Storyboard>
												</BeginStoryboard>
											</Trigger.ExitActions>
										</Trigger>

										<Trigger Property="IsChecked" Value="True">
											<Trigger.EnterActions>
												<BeginStoryboard>
													<Storyboard>
														<DoubleAnimation
															EasingFunction="{StaticResource SinEaseIn}"
															Storyboard.TargetName="Background"
															Storyboard.TargetProperty="Opacity"
															To="1"
															Duration="0:0:0.200" />

														<DoubleAnimation
															EasingFunction="{StaticResource SinEaseInOut}"
															Storyboard.TargetName="Stop0"
															Storyboard.TargetProperty="Offset"
															From="-1"
															To="1"
															Duration="0:0:0.500" />
														<DoubleAnimation
															EasingFunction="{StaticResource SinEaseInOut}"
															Storyboard.TargetName="Stop1"
															Storyboard.TargetProperty="Offset"
															From="-0.5"
															To="1.5"
															Duration="0:0:0.300" />
														<DoubleAnimation
															EasingFunction="{StaticResource SinEaseInOut}"
															Storyboard.TargetName="Stop2"
															Storyboard.TargetProperty="Offset"
															From="0"
															To="2"
															Duration="0:0:0.200" />
													</Storyboard>
												</BeginStoryboard>
											</Trigger.EnterActions>

											<Trigger.ExitActions>
												<BeginStoryboard>
													<Storyboard>
														<DoubleAnimation
															EasingFunction="{StaticResource SinEaseIn}"
															Storyboard.TargetName="Background"
															Storyboard.TargetProperty="Opacity"
															To="0"
															Duration="0:0:0.200" />
													</Storyboard>
												</BeginStoryboard>
											</Trigger.ExitActions>
										</Trigger>

										<Trigger Property="IsPressed" Value="True">
											<Trigger.EnterActions>
												<BeginStoryboard>
													<Storyboard>
														<DoubleAnimation
															EasingFunction="{StaticResource SinEaseIn}"
															Storyboard.TargetName="Grid"
															Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
															To="0.9"
															Duration="0:0:0.100" />

														<DoubleAnimation
															EasingFunction="{StaticResource SinEaseIn}"
															Storyboard.TargetName="Grid"
															Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
															To="0.9"
															Duration="0:0:0.100" />
													</Storyboard>
												</BeginStoryboard>
											</Trigger.EnterActions>

											<Trigger.ExitActions>
												<BeginStoryboard>
													<Storyboard>
														<DoubleAnimation
															Storyboard.TargetName="Grid"
															Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)"
															From="0.9"
															To="1"
															Duration="0:0:0.200">
															<DoubleAnimation.EasingFunction>
																<BackEase EasingMode="EaseOut" />
															</DoubleAnimation.EasingFunction>
														</DoubleAnimation>

														<DoubleAnimation
															Storyboard.TargetName="Grid"
															Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)"
															From="0.9"
															To="1"
															Duration="0:0:0.200">
															<DoubleAnimation.EasingFunction>
																<BackEase EasingMode="EaseOut" />
															</DoubleAnimation.EasingFunction>
														</DoubleAnimation>
													</Storyboard>
												</BeginStoryboard>
											</Trigger.ExitActions>

										</Trigger>

									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style.Setters>
				</Style>
			</ToggleButton.Style>


		</ToggleButton>

	</Grid>
</panels:PanelBase>
